{"remainingRequest":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/babel-loader/lib/index.js!/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/src/pages/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/src/pages/Home.vue","mtime":1621061284958},{"path":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linhnguyen/Desktop/EasyCook1/easy_cook-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGJhY2tlciBmcm9tICIuLi91dGlscy9heGlvcyI7CmltcG9ydCBGb290ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9Gb290ZXIiOwppbXBvcnQgSGVhZGVyIGZyb20gIi4uL2NvbXBvbmVudHMvSGVhZGVyIjsKaW1wb3J0IENhcm91c2VsIGZyb20gIi4uL2NvbXBvbmVudHMvQ2Fyb3VzZWwiOwppbXBvcnQgTGlzdCBmcm9tICIuLi9jb21wb25lbnRzL0xpc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RzOiBbXSwKICAgICAgY2F0ZWdvcmllczogW10sCiAgICAgIHRvdGFsOiAwLAogICAgICBwZXJQYWdlOiAxMCwKICAgICAgcGVyTG92ZTogNSwKICAgICAgdG90YWxMb3ZlOiAwLAogICAgICBsb3ZlOiAwLAogICAgICBpOiA1LAogICAgICB1c2VyeDogZmFsc2UsCiAgICAgIGNvbDogNiwKICAgICAgbG92ZUxpc3Q6IFtdLAogICAgICBzdG9yZVBvc3Q6ICIiLAogICAgICByZXR1cm5lZFRhcmdldDoge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBtb3JlOiBmdW5jdGlvbiBtb3JlKCkgewogICAgICB0aGlzLmkgKz0gNTsKICAgIH0sCiAgICBsb2FkUG9zdDogZnVuY3Rpb24gbG9hZFBvc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcGFnZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogMTsKICAgICAgYmFja2VyLmdldCgicG9zdD9wYWdlPSIuY29uY2F0KHBhZ2UpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLnBvc3RzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgIF90aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbDsKICAgICAgICBfdGhpcy5wZXJQYWdlID0gcmVzcG9uc2UuZGF0YS5wZXJfcGFnZTsKICAgICAgfSk7CiAgICB9LAogICAgbG9hZExvdmU6IGZ1bmN0aW9uIGxvYWRMb3ZlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBhcnIgPSBbXTsKICAgICAgYmFja2VyLmdldCgiaW5mbyIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgYmFja2VyLmdldCgiaW5ncmVkaWVudF91c2VyLyIgKyByZXNwb25zZS5kYXRhLnVzZXIuaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICB2YXIgbGlrZWQgPSByZXNwb25zZS5kYXRhLmxpc3RMaWtlZDsKCiAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggaW4gcmVzcG9uc2UuZGF0YS5oaWdoKSB7CiAgICAgICAgICAgICAgICBiYWNrZXIuZ2V0KCJsb3ZlP2lkPSIuY29uY2F0KHJlc3BvbnNlLmRhdGEuaGlnaFtpbmRleF0pKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICBhcnIgPSBhcnIuY29uY2F0KHJlc3BvbnNlLmRhdGEubG92ZS5kYXRhKTsKICAgICAgICAgICAgICAgICAgICBfdGhpczIubG92ZUxpc3QgPSBhcnI7CgogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgYXJyLmxlbmd0aDsgeCsrKSB7CiAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciB6ID0gMDsgeiA8IGxpa2VkLmxlbmd0aDsgeisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcnJbeF0ucG9zdF9pZCA9PSBsaWtlZFt6XS5wb3N0X2lkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyLnNwbGljZSh4LCAxKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHkgPSB4ICsgMTsgeSA8IGFyci5sZW5ndGg7IHkrKykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJyW3hdLnBvc3RfaWQgPT0gYXJyW3ldLnBvc3RfaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhcnIuc3BsaWNlKHksIDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBfdGhpczIudXNlcnggPSB0cnVlOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGFycik7CiAgICAgICAgICAgIH0pKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGxvYWRDYXRlZ29yeTogZnVuY3Rpb24gbG9hZENhdGVnb3J5KHBhZ2UpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBiYWNrZXIuZ2V0KCJjYXRlZ29yeT9wYWdlPSIuY29uY2F0KHBhZ2UpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMy5jYXRlZ29yaWVzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlcjogSGVhZGVyLAogICAgQ2Fyb3VzZWw6IENhcm91c2VsLAogICAgTGlzdDogTGlzdCwKICAgIEZvb3RlcjogRm9vdGVyCiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkUG9zdCgpOwogICAgdGhpcy5sb2FkQ2F0ZWdvcnkoKTsKICAgIHRoaXMubG9hZExvdmUoKTsKICB9Cn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <Header />\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xl-12\">\n          <Carousel :posts=\"posts\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-8\">\n          <div class=\"col-xl-12\">\n            <h2 class=\"font-weight-bolder mt-5 mb-3\">Công thức mới nhất</h2>\n          </div>\n          <List\n            :posts=\"posts\"\n            :storePost=\"storePost\"\n            :total=\"total\"\n            :perPage=\"perPage\"\n            :col=\"col\"\n          />\n        </div>\n        <div class=\"col-xl-4\">\n          <div class=\"row\" v-if=\"userx\">\n            <div class=\"col-xl-12\">\n              <h2 class=\"font-weight-bolder mt-5 mb-4\">Công thức đề xuất</h2>\n            </div>\n            <div\n              class=\"col-xl-12 border p-1 d-flex justify-content-start align-items-center\"\n              v-for=\"(post, index) in loveList.slice(0, i)\"\n              :key=\"index\"\n            >\n              <router-link\n                :to=\"{\n                  name: 'view',\n                  params: { id: post.post_id, slug: post.slug },\n                }\"\n              >\n                <img\n                  class=\"img-fluid\"\n                  :src=\"post.image\"\n                  alt=\"\"\n                  height=\"75px\"\n                  width=\"75px\"\n                />\n              </router-link>\n              <div class=\"m-1\">\n                <router-link\n                  class=\"font-weight-bold\"\n                  :to=\"{\n                    name: 'view',\n                    params: { id: post.post_id, slug: post.slug },\n                  }\"\n                >\n                  {{ post.name }}\n                </router-link>\n                <p class=\"\">\n                  <b-badge variant=\"info\" class=\"p-1\">{{\n                    post.category\n                  }}</b-badge>\n                </p>\n              </div>\n            </div>\n            <div class=\"col-xl-12 border p-3 text-center\">\n              <h4 class=\"btn btn-dark\" @click=\"more\">Xem thêm</h4>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-xl-12\">\n              <h2 class=\"font-weight-bolder mt-5 mb-3\">Chuyên mục</h2>\n            </div>\n            <div class=\"col-xl-12 border\">\n              <div\n                v-for=\"(category, index) in categories\"\n                :key=\"index\"\n                class=\"pt-1\"\n              >\n                <div class=\"border-bottom p-3\">\n                  <router-link\n                    :to=\"{ name: 'category', params: { id: category.id } }\"\n                    :id=\"index\"\n                  >\n                    {{ category.name }}\n                  </router-link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <Footer />\n  </div>\n</template>\n<script>\nimport backer from \"../utils/axios\";\nimport Footer from \"../components/Footer\";\n\nimport Header from \"../components/Header\";\nimport Carousel from \"../components/Carousel\";\nimport List from \"../components/List\";\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      categories: [],\n      total: 0,\n      perPage: 10,\n      perLove: 5,\n      totalLove: 0,\n      love: 0,\n      i: 5,\n      userx: false,\n      col: 6,\n      loveList: [],\n      storePost: \"\",\n      returnedTarget: {},\n    };\n  },\n  methods: {\n    more: function () {\n      this.i += 5;\n    },\n    loadPost: function (page = 1) {\n      backer.get(`post?page=${page}`).then((response) => {\n        this.posts = response.data.data;\n        this.total = response.data.total;\n        this.perPage = response.data.per_page;\n      });\n    },\n    loadLove: function () {\n      let arr = [];\n      backer.get(\"info\").then((response) => {\n        backer\n          .get(\"ingredient_user/\" + response.data.user.id)\n          .then((response) => {\n            if (response.data.status) {\n              let liked = response.data.listLiked;\n              for (let index in response.data.high) {\n                backer\n                  .get(`love?id=${response.data.high[index]}`)\n                  .then((response) => {\n                    if (response.data.status) {\n                      arr = arr.concat(response.data.love.data);\n                      this.loveList = arr;\n\n                      for (let x = 0; x < arr.length; x++) {\n                        for (let z = 0; z < liked.length; z++) {\n                          if (arr[x].post_id == liked[z].post_id) {\n                            arr.splice(x, 1);\n                          }\n                        }\n                        for (let y = x + 1; y < arr.length; y++) {\n                          if (arr[x].post_id == arr[y].post_id) {\n                            arr.splice(y, 1);\n                            break;\n                          }\n                        }\n                      }\n\n                      this.userx = true;\n                    }\n                  });\n              }\n              console.log(arr);\n            }\n          });\n      });\n    },\n    loadCategory: function (page) {\n      backer.get(`category?page=${page}`).then((response) => {\n        this.categories = response.data.data;\n      });\n    },\n  },\n  components: {\n    Header,\n    Carousel,\n    List,\n    Footer,\n  },\n  mounted() {\n    this.loadPost();\n    this.loadCategory();\n    this.loadLove();\n  },\n};\n</script>\n<style scoped>\n</style>\n"],"sourceRoot":"src/pages"}]}